name: Build and Release

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]
  release:
    types: [ created ]

env:
  PRODUCT_NAME: macOCR

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache Swift packages
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Resolve dependencies
      run: swift package resolve
      
    - name: Build project
      run: swift build -c release --arch arm64 --arch x86_64
      
    - name: Create output directory
      run: mkdir -p output
      
    - name: Copy binary to output
      run: |
        cp .build/apple/Products/Release/ocr output/
        chmod +x output/ocr
        
    - name: Create archive
      run: |
        cd output
        tar -czf ../macOCR-${{ github.sha }}.tar.gz ocr
        cd ..
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macOCR-${{ github.sha }}
        path: macOCR-${{ github.sha }}.tar.gz
        retention-days: 30

  release:
    needs: build
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache Swift packages
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build release
      run: swift build -c release --arch arm64 --arch x86_64
      
    - name: Create release directory
      run: mkdir -p release
      
    - name: Copy binary to release
      run: |
        cp .build/apple/Products/Release/ocr release/
        chmod +x release/ocr
        
    - name: Create release archive
      run: |
        cd release
        tar -czf ../macOCR-${{ github.ref_name }}.tar.gz ocr
        cd ..
        zip -r macOCR-${{ github.ref_name }}.zip release/ocr
        
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        files: |
          macOCR-${{ github.ref_name }}.tar.gz
          macOCR-${{ github.ref_name }}.zip
        body: |
          # macOCR Release ${{ steps.tag.outputs.tag }}
          
          ## How to use:
          1. download the corresponding archive
          2. unzip the archive
          3. run `./ocr` command
          
          ## System requirements
          - macOS 11.0 or higher
          - Support Intel and Apple Silicon chips
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 